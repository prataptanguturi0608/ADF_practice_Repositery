{
	"name": "pl_myFirstProject",
	"properties": {
		"activities": [
			{
				"name": "Get_Input_FolderMetadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_mfp_blobFolder",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get_Input_FolderMetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_Input_FolderMetadata').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Switch1",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@split(variables('v_InputFileName'),'.')[1]",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "txt",
										"activities": [
											{
												"name": "CopyTxtFilesToBronze",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Ingestion_by",
																"value": {
																	"value": "@pipeline().parameters.p_IngestedBy",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_TimeStamp",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_Date",
																"value": {
																	"value": "@formatDateTime(utcNow(),'yyyy/MM/dd')",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_txt",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": {
																"value": "@variables('v_InputFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_mfp_DLake_B_txt",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "ArchiveTxtFiles",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyTxtFilesToBronze",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_txt",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": {
																"value": "@variables('v_InputFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_archive_text",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "DeleteTxtFiles",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "ArchiveTxtFiles",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ds_mfp_Blob_landing_txt",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": {
																"value": "@variables('v_InputFileName')",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "ls_myFirstProject_BlobStorage1",
															"type": "LinkedServiceReference"
														},
														"path": "logs"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									},
									{
										"value": "json",
										"activities": [
											{
												"name": "CopyJsonFilesToBronze",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"additionalColumns": [
															{
																"name": "Ingestion_by",
																"value": {
																	"value": "@pipeline().parameters.p_IngestedBy",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_TimeStamp",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_Date",
																"value": {
																	"value": "@formatDateTime(utcNow(),'yyyy/MM/d')",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_Json",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": "@variables('v_InputFileName')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_mfp_DLake_B_Json",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "ArchiveJsonFiles",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyJsonFilesToBronze",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"additionalColumns": [
															{
																"name": "Ingestion_by",
																"value": {
																	"value": "@pipeline().parameters.p_IngestedBy",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_TimeStamp",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_Date",
																"value": {
																	"value": "@formatDateTime(utcNow(),'yyyy/MM/d')",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_Json",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": "@variables('v_InputFileName')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_archive_Json",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "DeleteJsonFiles",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "ArchiveJsonFiles",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ds_mfp_Blob_landing_Json",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": "@variables('v_InputFileName')"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "ls_myFirstProject_BlobStorage1",
															"type": "LinkedServiceReference"
														},
														"path": "logs"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									},
									{
										"value": "parquet",
										"activities": [
											{
												"name": "CopyParquetFiles",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"additionalColumns": [
															{
																"name": "Ingestion_by",
																"value": {
																	"value": "@pipeline().parameters.p_IngestedBy",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_TimeStamp",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_Date",
																"value": {
																	"value": "@formatDateTime(utcNow(),'yyyy/MM/dd')",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_Parquet",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": {
																"value": "@variables('v_InputFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_mfp_DLake_B_Parquet",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "ArchiveParquetFiles",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyParquetFiles",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"additionalColumns": [
															{
																"name": "Ingestion_by",
																"value": {
																	"value": "@pipeline().parameters.p_IngestedBy",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_TimeStamp",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															{
																"name": "Ingestion_Date",
																"value": {
																	"value": "@formatDateTime(utcNow(),'yyyy/MM/dd')",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_mfp_Blob_landing_Parquet",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": {
																"value": "@variables('v_InputFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_archive_Parquet",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "DeleteParquetFiles",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "ArchiveParquetFiles",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ds_mfp_Blob_landing_Parquet",
														"type": "DatasetReference",
														"parameters": {
															"p_Filename": "@variables('v_InputFileName')"
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "ls_myFirstProject_BlobStorage1",
															"type": "LinkedServiceReference"
														},
														"path": "logs"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "DummyWait",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						},
						{
							"name": "GetFilesMetadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_mfp_blobFiles",
									"type": "DatasetReference",
									"parameters": {
										"p_FileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFilesMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('GetFilesMetadata').output.size,300)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "SetFileName",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "v_InputFileName",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "BronzeToSilverDataflow",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "BronzeToSilverDataflow",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SilverToGoldDataflow",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "BronzeToSilverDataflow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SilverToGoldDataflow",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"p_IngestedBy": {
				"type": "string",
				"defaultValue": "Automated"
			}
		},
		"variables": {
			"v_InputFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ADE Classes"
		},
		"annotations": []
	}
}